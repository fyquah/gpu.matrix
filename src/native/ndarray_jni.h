/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class gpu_matrix_NDArray */

#ifndef _Included_gpu_matrix_NDArray
#define _Included_gpu_matrix_NDArray
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     gpu_matrix_NDArray
 * Method:    sample
 * Signature: ()Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_sample
  (JNIEnv *, jclass);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    newScalar
 * Signature: (D)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_newScalar__D
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    newScalar
 * Signature: ()Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_newScalar__
  (JNIEnv *, jclass);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    createFromShape
 * Signature: ([J)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_createFromShape
  (JNIEnv *, jclass, jlongArray);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    newInstance
 * Signature: ([DJ[J[J)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_newInstance
  (JNIEnv *, jclass, jdoubleArray, jlong, jlongArray, jlongArray);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gpu_matrix_NDArray_init
  (JNIEnv *, jclass);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    dimensionality
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_gpu_matrix_NDArray_dimensionality
  (JNIEnv *, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    shape
 * Signature: ()[J
 */
JNIEXPORT jlongArray JNICALL Java_gpu_matrix_NDArray_shape
  (JNIEnv *, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    clone
 * Signature: ()Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_clone
  (JNIEnv *, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    get
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_gpu_matrix_NDArray_get__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    get
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_gpu_matrix_NDArray_get__JJ
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    get
 * Signature: ([J)D
 */
JNIEXPORT jdouble JNICALL Java_gpu_matrix_NDArray_get___3J
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    set
 * Signature: (JD)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_set__JD
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    set
 * Signature: (JJD)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_set__JJD
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    set
 * Signature: ([JD)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_set___3JD
  (JNIEnv *, jobject, jlongArray, jdouble);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    equals
 * Signature: (Lgpu/matrix/NDArray;)Z
 */
JNIEXPORT jboolean JNICALL Java_gpu_matrix_NDArray_equals__Lgpu_matrix_NDArray_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    equals
 * Signature: (D)Z
 */
JNIEXPORT jboolean JNICALL Java_gpu_matrix_NDArray_equals__D
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    flatten
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_gpu_matrix_NDArray_flatten
  (JNIEnv *, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    add
 * Signature: (Lgpu/matrix/NDArray;)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_add__Lgpu_matrix_NDArray_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    add
 * Signature: (D)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_add__D
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    sub
 * Signature: (Lgpu/matrix/NDArray;)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_sub__Lgpu_matrix_NDArray_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    sub
 * Signature: (D)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_sub__D
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    mul
 * Signature: (Lgpu/matrix/NDArray;)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_mul__Lgpu_matrix_NDArray_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    mul
 * Signature: (D)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_mul__D
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    div
 * Signature: (Lgpu/matrix/NDArray;)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_div__Lgpu_matrix_NDArray_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    div
 * Signature: (D)Lgpu/matrix/NDArray;
 */
JNIEXPORT jobject JNICALL Java_gpu_matrix_NDArray_div__D
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    finalize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gpu_matrix_NDArray_finalize
  (JNIEnv *, jobject);

/*
 * Class:     gpu_matrix_NDArray
 * Method:    print
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gpu_matrix_NDArray_print
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
